name: Test and Analysis Code In Sonar Cloud
on:
  workflow_call:

  push:
    branches: 
      - hotfix/*
      - feature/*
      - bugfix/*  

  pull_request:
    types: [opened, synchronize, reopened]
    branches:       
      - dev
      - staging       
      - hotfix/*
      - feature/*
      - bugfix/*  
 
jobs:
  test_code_in_sonar:
    name: Test and Analysis Code In Sonar Cloud
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
      
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache SonarCloud packages
        id: cache-sonar
        uses: actions/cache@v3        
        with:        
            path: ~\sonar\cache
            key: ${{ runner.os }}-sonar
            restore-keys: ${{ runner.os }}-sonar
      
      - name: Create if not Exist Cache Sonar Packages
        if: steps.cache-sonar.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path ~\sonar\cache -ItemType Directory    
        
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
            path: .\.sonar\scanner
            key: ${{ runner.os }}-sonar-scanner
            restore-keys: ${{ runner.os }}-sonar-scanner                
      
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path ./.sonar/scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner

      - name: Install Angular dependencies
        run: |
          npm install npm@latest >/dev/null 2>&1
          npm install -g @angular/core @angular/cli > $null 2>&1

      - name: Build and analyze
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |          
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"alexfariakof_app-despesas-pessoais" /o:"alexfariakof" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"  /d:sonar.exclusions="**/XunitTests/**,  **/Migrations.MsSqlServer/**, **/Migrations.MySqlServer/**, **/HyperMedia/**, **/.documents/**, *.sql, **/Program.cs, **/Despesas.DataSeeders/**, **/Despesas.CrossCutting/**, **/*.spec.ts, **/main.ts, **/environment.*, **/app.routing.module.ts, **/__mock__/*.ts, **/*.js" /d:sonar.cs.opencover.reportsPaths="**/TestResults/coverage.opencover.xml" /d:sonar.cs.lcov.reportPaths="**/TestResults/coveragereport/lcov.info"  /d:sonar.typescript.opencover.reportsPaths="**/coverage/clover.xml" /d:sonar.typescript.lcov.reportPaths="**/coverage/lcov.info"
            dotnet tool install -g dotnet-reportgenerator-globaltool
            $projectTestPath = Join-Path -Path (Get-Location) -ChildPath "XunitTests"
            $waitProcess = Start-Process "powershell.exe" -ArgumentList "./coverage_report.ps1" -WorkingDirectory $projectTestPath -NoNewWindow  -PassThru
            $waitProcess.WaitForExit()
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"