name: Test and Analysis Code In Sonar Cloud
on:
  workflow_call:
  push:
    branches: 
      - hotfix/*
      - feature/*
      - bugfix/*  

  pull_request:
    types: [opened, reopened]
    branches:       
      - hotfix/*
      - feature/*
      - bugfix/*  

jobs:
  test_code_in_sonar:
    name: Test and Analysis Code In Sonar Cloud
    runs-on: ubuntu-latest
    steps:
     - uses: actions/checkout@v3
       with:
          fetch-depth: 0  
          projectBaseDir: .

     - name: Cache SonarCloud packages
       id: cache-sonar
       uses: actions/cache@v3        
       with:        
         path: ~\sonar\cache
         key: ${{ runner.os }}-sonar
         restore-keys: ${{ runner.os }}-sonar
      
     - name: Create if not Exist Cache Sonar Packages
       if: steps.cache-sonar.outputs.cache-hit != 'true'
       run: mokdir ~\sonar\cache
        
     - name: Cache SonarCloud scanner
       id: cache-sonar-scanner
       uses: actions/cache@v3
       with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner                
      
     - name: Install SonarCloud scanner
       if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
       run: |
          mkdir ./.sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner
           
     - name: Build and analyze
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
       run: |          
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"alexfariakof_app-despesas-pessoais" /o:"alexfariakof" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"  /d:sonar.exclusions="**/Migrations.MsSqlServer/**, **/Migrations.MySqlServer/**, **/HyperMedia/**, **/.documents/**, *.sql, **/Program.cs, **/Despesas.DataSeeders/**, **/Despesas.CrossCutting/**, **/*.spec.ts, **/main.ts, **/environment.*, **/app-routing.module.ts, **/*.js" /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" /d:sonar.cs.lcov.reportPaths="**/coveragereport/lcov.info"  /d:sonar.typescript.opencover.reportsPaths="**/coverage/clover.xml" /d:sonar.typescript.lcov.reportPaths="**/coverage/lcov.info"
            dotnet tool install -g dotnet-reportgenerator-globaltool
            dotnet test ./XunitTests/XUnit.Tests.csproj  -c Test -p:CollectCoverage=true -p:CoverletOutputFormat=cobertura --collect:"XPlat Code Coverage;Format=opencover"
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

     - name: SonarCloud Scan #Reported that when working with GitHub Actions reusable workflows
       uses: SonarSource/sonarcloud-github-action@master
       env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 
       with:
          projectBaseDir: .
